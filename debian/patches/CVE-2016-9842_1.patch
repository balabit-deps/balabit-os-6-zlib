Description: Avoid shifts of negative values inflateMark().
 The C standard says that bit shifts of negative integers is
 undefined.  This casts to unsigned values to assure a known
 result.
Author: Mark Adler <madler@alumni.caltech.edu>
Origin: upstream,
 https://github.com/madler/zlib/commit/e54e1299404101a5a9d0cf5e45512b543967f958
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=847274
Last-Update: 2020-01-08
--- a/inflate.c
+++ b/inflate.c
@@ -1504,9 +1504,10 @@ z_streamp strm;
 {
     struct inflate_state FAR *state;
 
-    if (strm == Z_NULL || strm->state == Z_NULL) return -1L << 16;
+    if (strm == Z_NULL || strm->state == Z_NULL)
+        return (long)(((unsigned long)0 - 1) << 16);
     state = (struct inflate_state FAR *)strm->state;
-    return ((long)(state->back) << 16) +
+    return (long)(((unsigned long)((long)state->back)) << 16) +
         (state->mode == COPY ? state->length :
             (state->mode == MATCH ? state->was - state->length : 0));
 }
